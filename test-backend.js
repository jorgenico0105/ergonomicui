// Script para probar la conectividad con el backend
// Ejecuta: node test-backend.js

const axios = require('axios');

const API_BASE_URL = 'https://ergonomic-poses-2.onrender.com';

async function testBackend() {
  console.log('üîç Probando conexi√≥n con el backend...\n');

  // Test 1: Health check
  try {
    console.log('1Ô∏è‚É£ Probando /health endpoint...');
    const healthResponse = await axios.get(`${API_BASE_URL}/health`, {
      timeout: 10000
    });
    console.log('‚úÖ Health check OK:', healthResponse.data);
  } catch (error) {
    console.log('‚ùå Health check fall√≥:', error.message);
    if (error.code === 'ECONNABORTED') {
      console.log('   ‚Üí El servidor tard√≥ m√°s de 10 segundos (probablemente est√° en sleep)');
    }
  }

  console.log('\n');

  // Test 2: Ergonomic module
  try {
    console.log('2Ô∏è‚É£ Probando /api/analisis-ergonomico/test endpoint...');
    const ergoResponse = await axios.get(`${API_BASE_URL}/api/analisis-ergonomico/test`, {
      timeout: 10000
    });
    console.log('‚úÖ M√≥dulo ergon√≥mico OK:', ergoResponse.data);
  } catch (error) {
    console.log('‚ùå M√≥dulo ergon√≥mico fall√≥:', error.message);
  }

  console.log('\n');

  // Test 3: Postural module
  try {
    console.log('3Ô∏è‚É£ Probando /api/analisis-postural/test endpoint...');
    const posturalResponse = await axios.get(`${API_BASE_URL}/api/analisis-postural/test`, {
      timeout: 10000
    });
    console.log('‚úÖ M√≥dulo postural OK:', posturalResponse.data);
  } catch (error) {
    console.log('‚ùå M√≥dulo postural fall√≥:', error.message);
  }

  console.log('\nüìä Resumen de diagn√≥stico:\n');
  console.log('Si todos los tests fallaron:');
  console.log('  ‚Üí El servidor de Render est√° dormido (sleep mode)');
  console.log('  ‚Üí Espera 30-60 segundos y vuelve a intentar');
  console.log('  ‚Üí Considera actualizar a Render paid tier para evitar sleep mode\n');

  console.log('Si solo el health funciona pero los m√≥dulos fallan:');
  console.log('  ‚Üí Hay un problema en la configuraci√≥n de blueprints del backend\n');

  console.log('Si todo funciona pero el an√°lisis falla:');
  console.log('  ‚Üí El timeout de 30 segundos de Render est√° cortando la petici√≥n');
  console.log('  ‚Üí Necesitas configurar gunicorn con timeout m√°s largo en render.yaml');
}

testBackend().catch(console.error);
